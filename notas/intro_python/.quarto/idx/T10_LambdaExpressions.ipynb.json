{"title":"Funciones lambda.","markdown":{"yaml":{"title":"Funciones lambda."},"headingText":"Programación funcional.","containsRefs":false,"markdown":"\n\n\n\n\n**Objetivo.**\n...\n\n**Funciones de Python**:\n...\n\n <p xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dct=\"http://purl.org/dc/terms/\"><a property=\"dct:title\" rel=\"cc:attributionURL\" href=\"https://github.com/repomacti/macti/tree/main/notebooks/Algebra_Lineal_01\">MACTI-Algebra_Lineal_01</a> by <a rel=\"cc:attributionURL dct:creator\" property=\"cc:attributionName\" href=\"https://www.macti.unam.mx\">Luis M. de la Cruz</a> is licensed under <a href=\"http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1\" target=\"_blank\" rel=\"license noopener noreferrer\" style=\"display:inline-block;\">Attribution-ShareAlike 4.0 International<img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1\"></a></p> \n\n\n\n\n- Paradigma de programación basado en el uso de funciones, entendiendo el concepto de función según su definición matemática, y no como los subprogramas de los lenguajes imperativos.<br>\n\n- Tiene sus raíces en el cálculo lambda (un sistema formal desarrollado en los años 1930 para investigar la definición de función, la aplicación de las funciones y la recursión). \n\n- Muchos lenguajes de programación funcionales pueden ser vistos como elaboraciones del cálculo lambda.\n\n- Las funciones que se usan en este paradigma son *funciones puras*, es decir, que no tienen efectos secundarios, que no manejan datos mutables o de estado. \n\n- Lo anterior está en contraposición con la programación imperativa. \n\n- Uno de sus principales representantes es el lenguaje Haskell, que compite en belleza, elegancia y expresividad con Python.\n\n- Los programas escritos en un estilo funcional son más fáciles de probar y depurar.\n\n- Por su característica modular facilita el cómputo concurrente y paralelo.\n\n- El estilo funcional se lleva muy bien con los datos, permitiendo crear algoritmos y programas más expresivos para trabajar en *Big Data*.\n\n# Lambda expressions\n\n- Una expresión Lambda (*Lambda expressions*) nos permite crear una función \"anónima\", es decir podemos crear funciones *ad-hoc*, **sin** la necesidad de definir una función propiamente con el comando <font color=#009900>**def**</font>.\n\n- Una expresión Lambda o función anónima, es una expresión simple, no un bloque de declaraciones.\n\n- Solo hay que escribir el resultado de una expresión en vez de regresar un valor explícitamente.\n\n- Dado que se limita a una expresión, una función anónima es menos general que una función normal <font color=#009900>**def**</font>.\n\nPor ejemplo, para calcular el cuadrado de un número podemos escribir la siguiente función:\n\nSe puede reducir el código anterior como sigue:\n\nSe puede reducir aún más, pero puede llevarnos a un mal estilo de programación. Por ejemplo:\n\n**Definición**.\nLa sintáxis de una expresión lambda en Python (función lambda o función anónima) es muy simple:\n\n```python\nlambda argument_list: expression\n``` \n1. La lista de argumentos consiste de objetos separados por coma. <br>\n2. La expresión es cualquiera que sea válida en Python.<br>\n\nSe puede asignar la función a una etiqueta para darle un nombre.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 1.**\n\n<font color=\"Black\">\n    \nFunción anónima para el cálculo del cuadrado de un número.\n\n</font>\n\n</div>\n\nPara poder usar la función anterior debe estar en un contexto donde pueda ser ejecutada o podemos darle un nombre como sigue:\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 2.**\n\n<font color=\"Black\">\n    \nEscribir una función lambda para calcular el cubo de un número usando la función lambda que calcula el cuadrado.\n</font>\n\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 3.**\n\n<font color=\"Black\">\n    \nConstruir una función que genere funciones para elevar un número `a` a una potencia `n`.\n</font>\n\n</div>\n\nEste ejemplo nos permite mostrar que es posible combinar la definición de funciones normales de Python con las funciones lambda.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 4.**\n\n<font color=\"Black\">\n    \nEscribir una función lambda para multiplicar dos números.\n</font>\n\n</div>\n\nEn este ejemplo vemos como una función lambda puede recibir dos argumentos.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 5.**\n\n<font color=\"Black\">\n    \nChecar si un número es par.\n</font>\n\n</div>\n\nEn este ejemplo usamos el operador ternario para probar una condición.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 6.**\n\n<font color=\"Black\">\n    \nObtener el primer y último elemento de una secuencia, la cual puede ser una cadena, una lista y una tupla.\n</font>\n\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 7.**\n\n<font color=\"Black\">\n    \nEscribir en reversa una secuencia qu puede ser una cadena, una lista y una tupla.\n</font>\n\n</div>\n\n# Funciones puras e impuras\n\n- La programación funcional busca usar funciones *puras*, es decir, que no tienen efectos secundarios, no manejan datos mutables o de estado. <br>\n\n- Estas funciones puras devuelven un valor que depende solo de sus argumentos.<br>\n\n\nPor ejemplo, podemos construir funciones que hagan un cálculo aritmético el cuál solo depende de sus entradas y no modifica otra cosa:\n\nEl que sigue es un ejemplo de una función impura que tiene efectos colaterales en la `lista`: \n\nLo anterior también puede suceder usando funciones lambda:\n\nUna buena práctica del estilo funcional es evitar los efectos secundarios, es decir, **que nuestras funciones NO modifiquen los valores de sus argumentos**.\n","srcMarkdownNoYaml":"\n\n\n\n\n**Objetivo.**\n...\n\n**Funciones de Python**:\n...\n\n <p xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dct=\"http://purl.org/dc/terms/\"><a property=\"dct:title\" rel=\"cc:attributionURL\" href=\"https://github.com/repomacti/macti/tree/main/notebooks/Algebra_Lineal_01\">MACTI-Algebra_Lineal_01</a> by <a rel=\"cc:attributionURL dct:creator\" property=\"cc:attributionName\" href=\"https://www.macti.unam.mx\">Luis M. de la Cruz</a> is licensed under <a href=\"http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1\" target=\"_blank\" rel=\"license noopener noreferrer\" style=\"display:inline-block;\">Attribution-ShareAlike 4.0 International<img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1\"></a></p> \n\n\n\n# Programación funcional.\n\n- Paradigma de programación basado en el uso de funciones, entendiendo el concepto de función según su definición matemática, y no como los subprogramas de los lenguajes imperativos.<br>\n\n- Tiene sus raíces en el cálculo lambda (un sistema formal desarrollado en los años 1930 para investigar la definición de función, la aplicación de las funciones y la recursión). \n\n- Muchos lenguajes de programación funcionales pueden ser vistos como elaboraciones del cálculo lambda.\n\n- Las funciones que se usan en este paradigma son *funciones puras*, es decir, que no tienen efectos secundarios, que no manejan datos mutables o de estado. \n\n- Lo anterior está en contraposición con la programación imperativa. \n\n- Uno de sus principales representantes es el lenguaje Haskell, que compite en belleza, elegancia y expresividad con Python.\n\n- Los programas escritos en un estilo funcional son más fáciles de probar y depurar.\n\n- Por su característica modular facilita el cómputo concurrente y paralelo.\n\n- El estilo funcional se lleva muy bien con los datos, permitiendo crear algoritmos y programas más expresivos para trabajar en *Big Data*.\n\n# Lambda expressions\n\n- Una expresión Lambda (*Lambda expressions*) nos permite crear una función \"anónima\", es decir podemos crear funciones *ad-hoc*, **sin** la necesidad de definir una función propiamente con el comando <font color=#009900>**def**</font>.\n\n- Una expresión Lambda o función anónima, es una expresión simple, no un bloque de declaraciones.\n\n- Solo hay que escribir el resultado de una expresión en vez de regresar un valor explícitamente.\n\n- Dado que se limita a una expresión, una función anónima es menos general que una función normal <font color=#009900>**def**</font>.\n\nPor ejemplo, para calcular el cuadrado de un número podemos escribir la siguiente función:\n\nSe puede reducir el código anterior como sigue:\n\nSe puede reducir aún más, pero puede llevarnos a un mal estilo de programación. Por ejemplo:\n\n**Definición**.\nLa sintáxis de una expresión lambda en Python (función lambda o función anónima) es muy simple:\n\n```python\nlambda argument_list: expression\n``` \n1. La lista de argumentos consiste de objetos separados por coma. <br>\n2. La expresión es cualquiera que sea válida en Python.<br>\n\nSe puede asignar la función a una etiqueta para darle un nombre.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 1.**\n\n<font color=\"Black\">\n    \nFunción anónima para el cálculo del cuadrado de un número.\n\n</font>\n\n</div>\n\nPara poder usar la función anterior debe estar en un contexto donde pueda ser ejecutada o podemos darle un nombre como sigue:\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 2.**\n\n<font color=\"Black\">\n    \nEscribir una función lambda para calcular el cubo de un número usando la función lambda que calcula el cuadrado.\n</font>\n\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 3.**\n\n<font color=\"Black\">\n    \nConstruir una función que genere funciones para elevar un número `a` a una potencia `n`.\n</font>\n\n</div>\n\nEste ejemplo nos permite mostrar que es posible combinar la definición de funciones normales de Python con las funciones lambda.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 4.**\n\n<font color=\"Black\">\n    \nEscribir una función lambda para multiplicar dos números.\n</font>\n\n</div>\n\nEn este ejemplo vemos como una función lambda puede recibir dos argumentos.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 5.**\n\n<font color=\"Black\">\n    \nChecar si un número es par.\n</font>\n\n</div>\n\nEn este ejemplo usamos el operador ternario para probar una condición.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 6.**\n\n<font color=\"Black\">\n    \nObtener el primer y último elemento de una secuencia, la cual puede ser una cadena, una lista y una tupla.\n</font>\n\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 7.**\n\n<font color=\"Black\">\n    \nEscribir en reversa una secuencia qu puede ser una cadena, una lista y una tupla.\n</font>\n\n</div>\n\n# Funciones puras e impuras\n\n- La programación funcional busca usar funciones *puras*, es decir, que no tienen efectos secundarios, no manejan datos mutables o de estado. <br>\n\n- Estas funciones puras devuelven un valor que depende solo de sus argumentos.<br>\n\n\nPor ejemplo, podemos construir funciones que hagan un cálculo aritmético el cuál solo depende de sus entradas y no modifica otra cosa:\n\nEl que sigue es un ejemplo de una función impura que tiene efectos colaterales en la `lista`: \n\nLo anterior también puede suceder usando funciones lambda:\n\nUna buena práctica del estilo funcional es evitar los efectos secundarios, es decir, **que nuestras funciones NO modifiquen los valores de sus argumentos**.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"T10_LambdaExpressions.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.550","theme":"cosmo","title":"Funciones lambda."},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"T10_LambdaExpressions.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"block-headings":true,"documentclass":"scrreprt","title":"Funciones lambda."},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}