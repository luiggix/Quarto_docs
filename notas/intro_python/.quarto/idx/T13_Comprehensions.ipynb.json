{"title":"Estructuras de datos concisas.","markdown":{"yaml":{"title":"Estructuras de datos concisas."},"headingText":"Listas concisas","containsRefs":false,"markdown":"\n\n\n\n\n**Objetivo.**\n...\n\n**Funciones de Python**:\n...\n\n <p xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dct=\"http://purl.org/dc/terms/\"><a property=\"dct:title\" rel=\"cc:attributionURL\" href=\"https://github.com/repomacti/macti/tree/main/notebooks/Algebra_Lineal_01\">MACTI-Algebra_Lineal_01</a> by <a rel=\"cc:attributionURL dct:creator\" property=\"cc:attributionName\" href=\"https://www.macti.unam.mx\">Luis M. de la Cruz</a> is licensed under <a href=\"http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1\" target=\"_blank\" rel=\"license noopener noreferrer\" style=\"display:inline-block;\">Attribution-ShareAlike 4.0 International<img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1\"></a></p> \n\n\n\n\nEn matemáticas podemos definir un conjunto como sigue: <br>\n\n$$S = \\{x^2 : x \\in (0, 1, 2, \\dots, 9)\\} = \\{0, 1, 4, \\dots, 81\\}$$\n\nEn Python es posible crear este conjunto usando lo que conoce como  *list comprehensions* (generación corta de listas) como sigue: \n\nLas listas concisas son usadas para construir listas de una manera muy concisa, natural y fácil, como lo hace un matemático. La forma precisa de construir listas concisas es como sigue:\n\n```python\n[ expresion for i in S if predicado ]\n```\n\nDonde `expresion` es una expresión que se va a aplicar a cada elemento `i` de la secuencia `S`; opcionalmente, es posible aplicar el `predicado` antes de aplicar la `expresion` a cada elemento `i`.\n\n\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 1.**\n\n<font color=\"Black\">\n    \nUsando listas concisas, crear el siguiente conjunto:\n\n$$\nM = \\{\\sqrt{x} : x \\in (1,2,3,4,5,6,7,8,9,10) \\;\\; \\text{y} \\;\\; x \\;\\; \\text{es par}\\} = \\{ \\sqrt{2}, \\sqrt{4}, \\sqrt{6}, \\sqrt{8}, \\sqrt{10}) \\}\n$$\n\n</font>\n\n</div>\n\nEn el ejemplo anterior se distingue lo siguiente:\n\n1. La secuencia de entrada: `range(2,11)` (`[2, 3, 4, 5, 6, 7, 8, 9, 10]`).\n\n2. La etiqueta `i` que representa los miembros de la secuencia de entrada.\n\n3. La expresión de predicado: `if x % 2 == 0`.\n    \n4. La expresión de salida `sqrt(x)` que produce los elementos de la lista resultado, los cuales provienen de los miembros de la secuencia de entrada que satisfacen el predicado.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 2.**\n\n<font color=\"Black\">\n    \nObtener todos los enteros de la siguiente lista, elevarlos al cuadrado y poner el resultado en una lista:<br>\n\n```python\n    lista = [1,'4',9,'luiggi',0,4,('mike','dela+')]\n```\n</font>\n\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 3.**\n\n<font color=\"Black\">\n    \nCrear la siguiente lista:\n$$V = (2^0,2^1,2^2, \\dots, 2^{12}) = (1, 2, 4, 8, \\dots, 4096) $$\n\n</font>\n\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 4.**\n\n<font color=\"Black\">\n    \nTransformar grados Celsius en Fahrenheit y vieceversa.\n</font>\n\n</div>\n\n**Celsius $\\to$ Fahrenheit**\n\n**Fahrenheit $\\to$ Celsius**\n\nObserva que en ambos ejemplos la expresión es la fórmula de conversión entre grados.\n\n# Anidado de listas concisas.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 5.**\n\n<font color=\"Black\">\n    \nCrear la siguiente lista:\n\n$$M = \\{\\sqrt{x} \\, |\\, x \\in S \\text{ y } x \\text{ impar }\\}$$\n\ncon \n\n$$S = \\{x^2 : x \\in (0 \\dots 9)\\} = \\{0, 1, 4, \\dots, 81\\}$$\n\n</font>\n\n</div>\n\nEste ejemplo se puede realizar como sigue:\n\nSin embargo, es posible anidar las listas concisas como sigue:\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 6.**\n\n<font color=\"Black\">\n\nSea una matriz identidad de tamaño $n \\times n$ :<br>\n\n$$\n\\left[\n\\begin{matrix}\n1 & 0 & 0 & \\dots & 0 \\\\\n0 & 1 & 0 & \\dots & 0 \\\\\n0 & 0 & 1 & \\dots & 0 \\\\\n\\vdots&\\vdots&\\vdots&\\ddots&\\vdots \\\\\n0 & 0 & 0 & \\dots & 1 \\\\\n\\end{matrix}\n\\right]\n$$\n\nEn Python esta matriz se puede representar por la siguiente lista: <br>\n\n```python\n[[1,0,0, ... , 0],\n [0,1,0, ... , 0],\n [0,0,1, ... , 0],\n ................,     \n [0,0,0, ... , 1]]\n```\n\n- Usando *list comprehensions* anidados se puede obtener dicha lista: <br>\n\n</font>\n\n</div>\n\nObserva que en este caso la expresión de salida es una lista concisa: <br> \n`[1 if col == row else 0 for col in range(0,n)]` .\n\nAdemás, la expresión de salida de esta última lista concisa es el operador ternario:\n`1 if col == row else 0`\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 7.**\n\n<font color=\"Black\">\n    \nCalcular números primos en el rango `[2,50]`.\n</font>\n\n</div>\n\n\nEn este ejercicio se usa el algoritmo conocido como criba de Eratóstenes. Primero se encuentran todos aquellos números que tengan algún múltiplo. En este caso solo vamos a buscar en el intervalo $[2,50]$. \n\nLa siguiente lista concisa calcula los múltiplos de `i` (prueba cambiando el valor de `i` a $2,3,4,5,6,7$) y observa el resultado.\n\nAhora, para cambiar el valor de `i` a $2,3,4,5,6,7$ con una lista concisa se puede hacer lo siguiente:\n\nUsando las dos listas concisas creadas antes, generamos todos aquellos números en el intervalo $[2,50]$ que tienen al menos un múltiplo (y que por lo tanto no son primos)\n\nPara encontrar los primos usamos una lista concisa verificando los números que faltan en la lista de `noprimos`, esos serán los números primos que estamos buscando:\n\n**Juntando todo**:\n\n## Listas concisas con elementos no numéricos.\nLas listas también pueden contener otro tipo de elementos, no solo números. Por ejemplo:\n\nVamos a crear una lista cuyos elementos contienen cada palabra de la lista anterior en mayúsculas, en forma de título y su longitud, estos tres elementos agregados en una tupla:\n\n# Conjuntos concisos\n\nAl igual que las listas concisas, también es posible crear conjuntos usando los mismos principios , la única diferencia es que la secuencia que resulta es un objeto de tipo`set`. <br>\n\n**Definición**.\n\n```python\n{expression(variable) for variable in input_set [predicate][, …]}\n```\n\n1. `expression` : Es una expresión **opcional** de salida que produce los miembros del nuevo conjunto a partir de los miembros del conjunto de entrada que satisfacen el `predicate`. <br>\n\n2. `variable` : Es una variable **requerida** que representa los miembros del conjunto de entrada. <br>\n\n3. `input_set`: Representa la secuencia de entrada. (**requerido**). <br>\n\n4. `predicate` : Expresión **opcional** que actúa como un filtro sobre los miembros del conjunto de entrada. <br>\n\n5. `[, …]]` : Otra *comprehension* anidada **opcional**.\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 8.**\n\n<font color=\"Black\">\n    \nSupongamos que deseamos organizar una lista de nombres de tal manera que no haya repeticiones, que los nombres tengan más de un caracter y que su representación sea con la primera letra mayúscula y las demás minúsculas. Por ejemplo, una lista aceptable sería:\n\n```python\nnombres = ['Luis', 'Juan', 'Angie', 'Pedro', 'María', 'Diana']\n```\n\nLeer una lista de nombres del archivo `nombres` y procesarlos para obtener una lista similar a la descrita. \n</font>\n\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 9.**\n\n<font color=\"Black\">\n    \nObserva los siguientes ejemplos de conjuntos concisos y explica su funcionamiento.\n</font>\n\n</div>\n\n\n# Diccionarios concisos\n\n- Es un método para transformar un diccionario en otro diccionario. <br>\n\n- Durante esta transformación, los objetos dentro del diccionario original pueden ser incluidos o no en el nuevo diccionario dependiendo de una condición. <br>\n\n- Cada objeto en el nuevo diccionario puede ser transformado como sea requerido. <br>\n\n**Definición**.\n\n```python\n{key:value for (key,value) in dictonary.items()}\n```\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 9.**\n\n<font color=\"Black\">\n    \nDuplicar el valor (*value*) de cada entrada (*item*) de un diccionario:</font>\n</font>\n</div>\n\n\nRecuerda como funcionan los diccionarios:\n\nPara crear el diccionario del ejemplo hacemos lo siguiente:\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 10.**\n\n<font color=\"Black\">\n    \nDuplicar la clave (*key*) de cada entrada (*item*) del diccionario:\n</font>\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 11.**\n\n<font color=\"Black\">\n    \nCrear un diccionario donde la clave sea un número divisible por 2 en un rango de 0 a 10 y sus valores sean el cuadrado de la clave.\n</font>\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 12.**\n\n<font color=\"Black\">\n    \nIntercambiar las claves y los valores en un diccionario.\n</font>\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 14.**\n\n<font color=\"Black\">\n    \nConvertir Fahrenheit a Celsius y viceversa.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 15.**\n\n<font color=\"Black\">\n    \nDado un diccionario, cuyos valores son enteros, crear un nuevo diccionario cuyos valores sean mayores que 2.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 16.**\n\n<font color=\"Black\">\n    \nDado un diccionario, cuyos valores son enteros, crear un nuevo diccionario cuyos valores sean mayores que 2 y que además sean pares.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 17.**\n\n<font color=\"Black\">\n    \nDado un diccionario, cuyos valores son enteros, crear un nuevo diccionario cuyos valores sean mayores que 2 y que además sean pares y divisibles por 3.\n\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 18.**\n\n<font color=\"Black\">\n    \nApartir de un diccionario con valores enteros, identificar los valores pares y los impares, y sustituir los valores por etiquetas 'par' e 'impar' segun corresponda.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 19.**\n\n<font color=\"Black\">\n    \nCrear un diccionaro cuyos valores sean diccionarios.\n</font>\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 20.**\n\n<font color=\"Black\">\n    \nEliminar números duplicados de una lista.\n</font>\n</div>\n\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 21.**\n\n<font color=\"Black\">\n    \nEliminar objetos duplicados de una lista de diccionarios.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 22.**\n\n<font color=\"Black\">\n    \nSea un diccionario que tiene como claves letras minúsculas y mayúsculas, y como valores números enteros:\n\n```python\nmcase = {'z':23, 'a':30, 'b':21, 'A':78, 'Z':4, 'C':43, 'B':89}\n```\n\n- Sumar los valores que corresponden a la misma letra, mayúscula y minúscula.\n\n- Construir un diccionario cuyas claves sean solo letras minúsculas y sus valores sean la suma antes calculada.\n\n</font>\n</div>\n\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 23.**\n\n<font color=\"Black\">\n    \nEs posible usar las listas y diccionarios concisos para revisar la lista de archivos de un directorio y sus características.\n</font>\n</div>\n\n","srcMarkdownNoYaml":"\n\n\n\n\n**Objetivo.**\n...\n\n**Funciones de Python**:\n...\n\n <p xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dct=\"http://purl.org/dc/terms/\"><a property=\"dct:title\" rel=\"cc:attributionURL\" href=\"https://github.com/repomacti/macti/tree/main/notebooks/Algebra_Lineal_01\">MACTI-Algebra_Lineal_01</a> by <a rel=\"cc:attributionURL dct:creator\" property=\"cc:attributionName\" href=\"https://www.macti.unam.mx\">Luis M. de la Cruz</a> is licensed under <a href=\"http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1\" target=\"_blank\" rel=\"license noopener noreferrer\" style=\"display:inline-block;\">Attribution-ShareAlike 4.0 International<img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1\"></a></p> \n\n\n\n# Listas concisas\n\nEn matemáticas podemos definir un conjunto como sigue: <br>\n\n$$S = \\{x^2 : x \\in (0, 1, 2, \\dots, 9)\\} = \\{0, 1, 4, \\dots, 81\\}$$\n\nEn Python es posible crear este conjunto usando lo que conoce como  *list comprehensions* (generación corta de listas) como sigue: \n\nLas listas concisas son usadas para construir listas de una manera muy concisa, natural y fácil, como lo hace un matemático. La forma precisa de construir listas concisas es como sigue:\n\n```python\n[ expresion for i in S if predicado ]\n```\n\nDonde `expresion` es una expresión que se va a aplicar a cada elemento `i` de la secuencia `S`; opcionalmente, es posible aplicar el `predicado` antes de aplicar la `expresion` a cada elemento `i`.\n\n\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 1.**\n\n<font color=\"Black\">\n    \nUsando listas concisas, crear el siguiente conjunto:\n\n$$\nM = \\{\\sqrt{x} : x \\in (1,2,3,4,5,6,7,8,9,10) \\;\\; \\text{y} \\;\\; x \\;\\; \\text{es par}\\} = \\{ \\sqrt{2}, \\sqrt{4}, \\sqrt{6}, \\sqrt{8}, \\sqrt{10}) \\}\n$$\n\n</font>\n\n</div>\n\nEn el ejemplo anterior se distingue lo siguiente:\n\n1. La secuencia de entrada: `range(2,11)` (`[2, 3, 4, 5, 6, 7, 8, 9, 10]`).\n\n2. La etiqueta `i` que representa los miembros de la secuencia de entrada.\n\n3. La expresión de predicado: `if x % 2 == 0`.\n    \n4. La expresión de salida `sqrt(x)` que produce los elementos de la lista resultado, los cuales provienen de los miembros de la secuencia de entrada que satisfacen el predicado.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 2.**\n\n<font color=\"Black\">\n    \nObtener todos los enteros de la siguiente lista, elevarlos al cuadrado y poner el resultado en una lista:<br>\n\n```python\n    lista = [1,'4',9,'luiggi',0,4,('mike','dela+')]\n```\n</font>\n\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 3.**\n\n<font color=\"Black\">\n    \nCrear la siguiente lista:\n$$V = (2^0,2^1,2^2, \\dots, 2^{12}) = (1, 2, 4, 8, \\dots, 4096) $$\n\n</font>\n\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 4.**\n\n<font color=\"Black\">\n    \nTransformar grados Celsius en Fahrenheit y vieceversa.\n</font>\n\n</div>\n\n**Celsius $\\to$ Fahrenheit**\n\n**Fahrenheit $\\to$ Celsius**\n\nObserva que en ambos ejemplos la expresión es la fórmula de conversión entre grados.\n\n# Anidado de listas concisas.\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 5.**\n\n<font color=\"Black\">\n    \nCrear la siguiente lista:\n\n$$M = \\{\\sqrt{x} \\, |\\, x \\in S \\text{ y } x \\text{ impar }\\}$$\n\ncon \n\n$$S = \\{x^2 : x \\in (0 \\dots 9)\\} = \\{0, 1, 4, \\dots, 81\\}$$\n\n</font>\n\n</div>\n\nEste ejemplo se puede realizar como sigue:\n\nSin embargo, es posible anidar las listas concisas como sigue:\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 6.**\n\n<font color=\"Black\">\n\nSea una matriz identidad de tamaño $n \\times n$ :<br>\n\n$$\n\\left[\n\\begin{matrix}\n1 & 0 & 0 & \\dots & 0 \\\\\n0 & 1 & 0 & \\dots & 0 \\\\\n0 & 0 & 1 & \\dots & 0 \\\\\n\\vdots&\\vdots&\\vdots&\\ddots&\\vdots \\\\\n0 & 0 & 0 & \\dots & 1 \\\\\n\\end{matrix}\n\\right]\n$$\n\nEn Python esta matriz se puede representar por la siguiente lista: <br>\n\n```python\n[[1,0,0, ... , 0],\n [0,1,0, ... , 0],\n [0,0,1, ... , 0],\n ................,     \n [0,0,0, ... , 1]]\n```\n\n- Usando *list comprehensions* anidados se puede obtener dicha lista: <br>\n\n</font>\n\n</div>\n\nObserva que en este caso la expresión de salida es una lista concisa: <br> \n`[1 if col == row else 0 for col in range(0,n)]` .\n\nAdemás, la expresión de salida de esta última lista concisa es el operador ternario:\n`1 if col == row else 0`\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 7.**\n\n<font color=\"Black\">\n    \nCalcular números primos en el rango `[2,50]`.\n</font>\n\n</div>\n\n\nEn este ejercicio se usa el algoritmo conocido como criba de Eratóstenes. Primero se encuentran todos aquellos números que tengan algún múltiplo. En este caso solo vamos a buscar en el intervalo $[2,50]$. \n\nLa siguiente lista concisa calcula los múltiplos de `i` (prueba cambiando el valor de `i` a $2,3,4,5,6,7$) y observa el resultado.\n\nAhora, para cambiar el valor de `i` a $2,3,4,5,6,7$ con una lista concisa se puede hacer lo siguiente:\n\nUsando las dos listas concisas creadas antes, generamos todos aquellos números en el intervalo $[2,50]$ que tienen al menos un múltiplo (y que por lo tanto no son primos)\n\nPara encontrar los primos usamos una lista concisa verificando los números que faltan en la lista de `noprimos`, esos serán los números primos que estamos buscando:\n\n**Juntando todo**:\n\n## Listas concisas con elementos no numéricos.\nLas listas también pueden contener otro tipo de elementos, no solo números. Por ejemplo:\n\nVamos a crear una lista cuyos elementos contienen cada palabra de la lista anterior en mayúsculas, en forma de título y su longitud, estos tres elementos agregados en una tupla:\n\n# Conjuntos concisos\n\nAl igual que las listas concisas, también es posible crear conjuntos usando los mismos principios , la única diferencia es que la secuencia que resulta es un objeto de tipo`set`. <br>\n\n**Definición**.\n\n```python\n{expression(variable) for variable in input_set [predicate][, …]}\n```\n\n1. `expression` : Es una expresión **opcional** de salida que produce los miembros del nuevo conjunto a partir de los miembros del conjunto de entrada que satisfacen el `predicate`. <br>\n\n2. `variable` : Es una variable **requerida** que representa los miembros del conjunto de entrada. <br>\n\n3. `input_set`: Representa la secuencia de entrada. (**requerido**). <br>\n\n4. `predicate` : Expresión **opcional** que actúa como un filtro sobre los miembros del conjunto de entrada. <br>\n\n5. `[, …]]` : Otra *comprehension* anidada **opcional**.\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 8.**\n\n<font color=\"Black\">\n    \nSupongamos que deseamos organizar una lista de nombres de tal manera que no haya repeticiones, que los nombres tengan más de un caracter y que su representación sea con la primera letra mayúscula y las demás minúsculas. Por ejemplo, una lista aceptable sería:\n\n```python\nnombres = ['Luis', 'Juan', 'Angie', 'Pedro', 'María', 'Diana']\n```\n\nLeer una lista de nombres del archivo `nombres` y procesarlos para obtener una lista similar a la descrita. \n</font>\n\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 9.**\n\n<font color=\"Black\">\n    \nObserva los siguientes ejemplos de conjuntos concisos y explica su funcionamiento.\n</font>\n\n</div>\n\n\n# Diccionarios concisos\n\n- Es un método para transformar un diccionario en otro diccionario. <br>\n\n- Durante esta transformación, los objetos dentro del diccionario original pueden ser incluidos o no en el nuevo diccionario dependiendo de una condición. <br>\n\n- Cada objeto en el nuevo diccionario puede ser transformado como sea requerido. <br>\n\n**Definición**.\n\n```python\n{key:value for (key,value) in dictonary.items()}\n```\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 9.**\n\n<font color=\"Black\">\n    \nDuplicar el valor (*value*) de cada entrada (*item*) de un diccionario:</font>\n</font>\n</div>\n\n\nRecuerda como funcionan los diccionarios:\n\nPara crear el diccionario del ejemplo hacemos lo siguiente:\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 10.**\n\n<font color=\"Black\">\n    \nDuplicar la clave (*key*) de cada entrada (*item*) del diccionario:\n</font>\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 11.**\n\n<font color=\"Black\">\n    \nCrear un diccionario donde la clave sea un número divisible por 2 en un rango de 0 a 10 y sus valores sean el cuadrado de la clave.\n</font>\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 12.**\n\n<font color=\"Black\">\n    \nIntercambiar las claves y los valores en un diccionario.\n</font>\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 14.**\n\n<font color=\"Black\">\n    \nConvertir Fahrenheit a Celsius y viceversa.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 15.**\n\n<font color=\"Black\">\n    \nDado un diccionario, cuyos valores son enteros, crear un nuevo diccionario cuyos valores sean mayores que 2.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 16.**\n\n<font color=\"Black\">\n    \nDado un diccionario, cuyos valores son enteros, crear un nuevo diccionario cuyos valores sean mayores que 2 y que además sean pares.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 17.**\n\n<font color=\"Black\">\n    \nDado un diccionario, cuyos valores son enteros, crear un nuevo diccionario cuyos valores sean mayores que 2 y que además sean pares y divisibles por 3.\n\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 18.**\n\n<font color=\"Black\">\n    \nApartir de un diccionario con valores enteros, identificar los valores pares y los impares, y sustituir los valores por etiquetas 'par' e 'impar' segun corresponda.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 19.**\n\n<font color=\"Black\">\n    \nCrear un diccionaro cuyos valores sean diccionarios.\n</font>\n</div>\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 20.**\n\n<font color=\"Black\">\n    \nEliminar números duplicados de una lista.\n</font>\n</div>\n\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 21.**\n\n<font color=\"Black\">\n    \nEliminar objetos duplicados de una lista de diccionarios.\n</font>\n</div>\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 22.**\n\n<font color=\"Black\">\n    \nSea un diccionario que tiene como claves letras minúsculas y mayúsculas, y como valores números enteros:\n\n```python\nmcase = {'z':23, 'a':30, 'b':21, 'A':78, 'Z':4, 'C':43, 'B':89}\n```\n\n- Sumar los valores que corresponden a la misma letra, mayúscula y minúscula.\n\n- Construir un diccionario cuyas claves sean solo letras minúsculas y sus valores sean la suma antes calculada.\n\n</font>\n</div>\n\n\n\n<div class=\"alert alert-info\">\n\n## **Ejemplo 23.**\n\n<font color=\"Black\">\n    \nEs posible usar las listas y diccionarios concisos para revisar la lista de archivos de un directorio y sus características.\n</font>\n</div>\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"T13_Comprehensions.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.550","theme":"cosmo","title":"Estructuras de datos concisas."},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"T13_Comprehensions.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"block-headings":true,"documentclass":"scrreprt","title":"Estructuras de datos concisas."},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}