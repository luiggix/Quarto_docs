---
title: "Object-Oriented Programming for Science"
subtitle: "DataBrew&Coffe"
author: "Luis Miguel de la Cruz Salas"
institute: "Depto. de Recursos Naturales, IGEF-UNAM"
date: "11/07/24"
format:
  revealjs:
    incremental: false
    theme: serif_oops.scss
    code-block-height: 550px
    preview-links: false
    transition: none
    slide-number: h/v
    show-slide-number: all
    css: math.scss
    footer: "OOPS"
    logo: ./figuras/unam_igeof.png
---

## Contenido.{.scrollable}

::::{.incremental}
* <font color="FireBrick"><b>Historia</b></font>  y características de la POO
* <font color="SeaGreen"><b>Ejemplos</b></font> de la POO en Ciencia.
* <font color="DarkBlue"><b>Recomendaciones</b></font> de uso.
:::

# <font color="FireBrick"><b>Historia</b></font>

## Why OOPS?{.scrollable}

::: {layout-nrow=1 layout-ncol="2"}
![Cálculo Diferencial, ESFM-IPN, IMB PC 5150, Microsoft BASIC](./figuras/esfm_ipn.jpg){fig-align="center"  width=100% .lightbox}

![Mecánica Clásica, FC-UNAM, APPLE II, AppleSoft BASIC](./figuras/prometeo.jpg){fig-align="center"  width=100% .lightbox}
:::

::::{.columns}
:::{.column width="60%"}
<font style="font-size:30px;">

* **BASIC** (*Beginners' All-purpose Symbolic Instruction Code*), por J.G. Kemeny y T.E. Kurtz, Dartmouth College, **1963**.
  - Objetivo: proporcionar una herraminta para estudiantes de áreas no científicas.
  - Se popularizó en los años 70. 
  - Múltiples dialectos: Microsoft BASIC y Applesoft BASIC. 
  - Declinó en los 90 por la aparición de C y Pascal.

</font>

:::
:::{.column width="40%"}

```{.basic}
10 INPUT "What is your name: "; U$
20 PRINT "Hello "; U$
30 INPUT "How many stars do you want: "; N
40 S$ = ""
50 FOR I = 1 TO N
60 S$ = S$ + "*"
70 NEXT I
80 PRINT S$
90 INPUT "Do you want more stars? "; A$
100 IF LEN(A$) = 0 THEN GOTO 90
110 A$ = LEFT$(A$, 1)
120 IF A$ = "Y" OR A$ = "y" THEN GOTO 30
130 PRINT "Goodbye "; U$
140 END
```
:::
::::

::::{.columns}
:::{.column width="60%"}
<font style="font-size:30px;">

* **Turbo Pascal**, por Anders Hejlsberg en la compañía [Borland](https://en.wikipedia.org/wiki/Borland).
  - Software que incluía un compilador y un IDE(Integrated Development Environment). 
  - Luego apareció Turbo C, haciendo a Borland una compañía lider.

![Turbo Pascal](./figuras/Turbo_Pascal_7.jpg){fig-align="center"  width=75% .lightbox}

</font>

:::
:::{.column width="40%"}

```{.pascal}
program HelloWorld;
begin
  WriteLn('Hello World');
end.
```

<br>

```{.pascal}
program exProcedure;
var
   a, b, c,  min: integer;

procedure findMin(x, y, z: integer; var m: integer); 
begin
   if x < y then
      m:= x
   else
      m:= y;
   
   if z < m then
      m:= z;
end; { end of procedure findMin }  

begin
   writeln(' Enter three numbers: ');
   readln( a, b, c);
   findMin(a, b, c, min); (* Procedure call *)
   
   writeln(' Minimum: ', min);
end.
```
:::
::::



## Supercómputo en la UNAM.

::: {layout-nrow=1 layout-ncol="2"}
![Cálculo Diferencial, ESFM-IPN, IMB PC 5150, Microsoft BASIC](./figuras/esfm_ipn.jpg){fig-align="center"  width=100% .lightbox}

![Mecánica Clásica, FC-UNAM, APPLE II, AppleSoft BASIC](./figuras/prometeo.jpg){fig-align="center"  width=100% .lightbox}
:::

## Simula

::::{.columns}
:::{.column width="60%"}

<font style="font-size:30px;">

* **Simula I** (1962) desarrollado en el [Norwegian Computing Center](https://nr.no/en/) de Oslo, Noruega, por **Ole-Johan Dahl** y **Kristen Nygaard**.

  - Orientado a la simulación de sistemas.
  
  - Basado en ALGOL 60. 
  
  - Introdujo conceptos innovadores: **objetos**, **clases**, **subclases** y **procedimientos virtuales**.

* **Simula 67** de propósito general.
  - Influyó en el desarrollo de otros lenguajes OO como **C++**, **Smalltalk** y **Objective-C**.


</font>

:::
:::{.column width="40%"}

```{.simula}
BEGIN
  CLASS Machine {
    busy: BOOLEAN;
    productionTime: REAL;
  }
  
  CLASS Material {
    quantity: INTEGER;
  }
  
  PROCEDURE produce() {
    machine := NEW Machine;
    machine.busy := TRUE;
    // ...
  }
  
  PROCEDURE consumeMaterial() {
    material := NEW Material;
    material.quantity := 10;
    // ...
  }
  
  MAIN {
    // Simulate 5 machines producing for 10 hours
    FOR i := 1 TO 5 {
      produce();
    }
    // Simulate material consumption
    FOR i := 1 TO 10 {
      consumeMaterial();
    }
  }
END
```
:::
::::


# <font color="SeaGreen"><b>Ejemplos</b></font>

* the hell

## Slide 2.1

* are

## Slide 2.2

* you


# <font color="DarkBlue"><b>Recomendaciones</b></font>

## H. {.scrollable}

Empezaremos con <font color="DarkSlateGray"><b>aplicaciones simples</b></font> y las resolveremos con los elementos del lenguaje.

. . .

::::{.columns}

**Por ejemplo:**

:::{.column width="50%"}
$$
\begin{eqnarray}
\text{peso} & = & 80 \;\; \text{kg} \\
\text{estatura} & = & 1.78 \;\; \text{m}
\end{eqnarray}
$$
:::
:::{.column width="50%"}
$$
\text{IMC} = \frac{\text{peso}}{\text{estatura}^2}
$$
:::
::::

. . .

::::{.columns}

:::{.column width="50%"}
**Implementación:**

```{.python}
peso = 80 # [kg]
estatura = 1.78 # [m]

IMC = peso / estatura**2

print("IMC = ", IMC)

```
:::
:::{.column width="50%"}

**Resultado:**

```


IMC =  25.24933720489837
```
:::
::::

## Diferenciadores 2. {.scrollable}

Los elementos del lenguaje los introduciremos <font color="DarkSlateGray"><b>conforme se vayan requiriendo</b></font>.

. . . 


::::{.columns}

:::{.column width="50%"}
**Por ejemplo:**

```{.python}
peso = 80 # [kg]
estatura = 1.78 # [m]

IMC = peso / estatura**2

print("IMC = ", IMC)

```
:::
:::{.column width="50%"}
**Elementos importantes:**

<font style="font-size:30px; color:DarkSlateGray">
<ul>
<li>Variables.</li>
<li>Tipos y Tipado dinámico.</li>
<li>Operadores.</li>
<li>Funciones incorporadas.</li>
<li>Comentarios.</li>
</ul>
</font>
:::

::::

## Diferenciadores 3. {.scrollable}

* Iremos desde un nivel básico hasta uno en donde los problemas tengan alguna aplicación real.

. . .

::::{.columns}
:::{.column width="35%"}
**Por ejemplo**:

<font style="font-size:30px; color:DarkSlateGray">
Contar las palabras y letras del primer capítulo del libro "El ingenioso Hidalgo Don Quijote de la Mancha". Contar las vocales y calcular su porcentaje de aparición con respecto del total.
</font>

:::
:::{.column width="2%"}
:::
:::{.column width="63%"}

<font style="font-size:20px; color:DarkSlateGray">
**Capítulo primero. Que trata de la condición y ejercicio del famoso y valiente hidalgo don Quijote de la Mancha.**
En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho tiempo que vivía un hidalgo de 
los de lanza en astillero, adarga antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que 
carnero, salpicón las más noches, duelos y quebrantos los sábados, lantejas los viernes, algún palomino 
de añadidura los domingos, consumían las tres partes de su hacienda. El resto della concluían sayo de 
velarte, calzas de velludo para las fiestas, con sus pantuflos de lo mesmo, y los días de entresemana se 
honraba con su vellorí de lo más fino. ...
</font>
:::
::::

. . .

**Implementación:**

```{.python}
archivo = open("Don_Quijote.txt")           # Archivo
total_palabras = 0                          # Número entero
total_letras = 0                            # Número entero
vocal = {'a':0, 'e':0, 'i':0, 'o':0, 'u':0} # Diccionario
texto = []                                  # Lista vacía

# Lee línea por línea
for línea in archivo:
    # Cuenta las palabras
    for palabra in línea.split():
        total_palabras += 1
        # Cuenta las letras
        for letra in palabra:
            total_letras += 1
            # Cuenta vocales
            vocal['a'] += 1 if letra == 'a' else 0
            vocal['e'] += 1 if letra == 'e' else 0
            vocal['i'] += 1 if letra == 'i' else 0
            vocal['o'] += 1 if letra == 'o' else 0
            vocal['u'] += 1 if letra == 'u' else 0
    texto.append(línea)

print("-"*40 + "\n{:^40s}\n".format("Resultado") + "-"*40)
print(f'Total palabras = {total_palabras}')
print(f'Total letras = {total_letras}')

# Imprime el total de vocales y calcula el porcentaje
[print(f'{k} = {vocal[k]}, ({vocal[k] / total_letras:5.3%})') for k in vocal]
print("-"*40 + "\n{:^40s}\n".format("Texto") + "-"*40)
# Imprime el texto
[print(línea, end="") for línea in texto]
 
archivo.close()
```
. . .

**Resultado**:
```
----------------------------------------
               Resultado                
----------------------------------------
Total palabras = 919
Total letras = 4239
a = 524, (12.361%)
e = 531, (12.527%)
i = 180, (4.246%)
o = 361, (8.516%)
u = 184, (4.341%)
----------------------------------------
                 Texto                  
----------------------------------------
Capítulo primero

Que trata de la condición y ejercicio del famoso y valiente hidalgo don Quijote de la Mancha

En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho tiempo que vivía un hidalgo ...

...

Diera él, por dar una mano de coces al traidor de Galalón, al ama que tenía, y aun a su sobrina de añadidura.

```
## Diferenciadores 4. {.scrollable}

* De inicio no requieres instalar nada en tu computadora, pues haremos uso de la plataforma <font style="color:DarkSlateGray"><b>MACTI</b></font>.

. . .

::: {layout-nrow=2 layout-ncol="3"}
![MACTI main](./figuras/macti01.png){fig-align="left"  width=75% .lightbox}

![MACTI menú](./figuras/macti02.png){fig-align="left"  width=75% .lightbox}

![MACTI IGEF](./figuras/macti03.png){fig-align="left"  width=75% .lightbox}

![MACTI Moodle](./figuras/macti_moodle_igf.png){fig-align="left"  width=75% .lightbox}

![MACTI Jupyterhub](./figuras/macti_jupyterhub_igf.png){fig-align="left"  width=75% .lightbox}

![MACTI Forgejo](./figuras/macti_forgejo.png){fig-align="left"  width=75% .lightbox}
:::

## Diferenciadores 5. {.scrollable}

* En esta plataforma podrás realizar algunos ejercicios, los cuales te darán retroalimentación inmediata cuando algo no salga correctamente.

. . .

**Evaluación formativa**.

::: {layout-nrow=2 layout-ncol="4"}
![](./figuras/macti_evaluacion_01.png){fig-align="center"  width=50% .lightbox}

![](./figuras/macti_evaluacion_02.png){fig-align="center"  width=50% .lightbox}

![](./figuras/macti_evaluacion_03.png){fig-align="center"  width=50% .lightbox}

![](./figuras/macti_evaluacion_04.png){fig-align="center"  width=50% .lightbox}

![](./figuras/macti_evaluacion_05.png){fig-align="center"  width=50% .lightbox}

![](./figuras/macti_evaluacion_06.png){fig-align="center"  width=50% .lightbox}

![](./figuras/macti_evaluacion_07.png){fig-align="center"  width=50% .lightbox}

![](./figuras/macti_evaluacion_08.png){fig-align="center"  width=50% .lightbox}
:::

## Diferenciadores 6. {.scrollable}

* Te proporcionaremos mucho material para practicar, pues solo practicando es como se aprende un nuevo lenguaje.

. . .

**Notebooks**.

![](./figuras/macti_material_introPython.png){fig-align="center"  width=50% .lightbox}

## Diferenciadores 7. {.scrollable}

::: {.incremental}
* Será un curso muy interactivo centrado en los participantes, el instructor será un facilitador que resolverá dudas e irá llevando el ritmo de cada clase.

* Haremos una breve introducción a [Git](https://git-scm.com/) y [GitHub](https://github.com/) para gestionar software.

* Al final del curso te diremos como instalar Python en tu computadora usando [Anaconda](https://www.anaconda.com/download).
:::


## Otros objetivos.{.scrollable}

. . .

![](./figuras/thinking_writing.jpg){fig-align="center"  width=75% .lightbox}

![](./figuras/1st_rule_programming.jpg){fig-align="center"  width=50% .lightbox}

![](./figuras/my_own_code.jpg){fig-align="center"  width=65% .lightbox}

. . .

::::{.columns}
:::{.column width="50%"}
![](./figuras/chat_gpt_add.jpg){fig-align="center"  width=85% .lightbox}
:::
:::{.column width="50%"}

![](./figuras/AI_more_original_than_researchers.jpg){fig-align="center"  width=85% .lightbox}

:::
::::

<font style="font-size:30px;">

[Do AI models produce more original ideas than researchers?^[1]](https://www.nature.com/articles/d41586-024-03070-5)

[1] [Si, C., Yang, D. & Hashimoto, T. Preprint at arXiv (2024)](https://doi.org/10.48550/arXiv.2409.04109).

</font>

# <font style="font-size:100px; color:DarkSlateGray">¡¡Empecemos!!</font>

## Tour por MACTI

* Checar las cuentas en:
  - MACTI
  - GitHub
  - ChatGPT
  - Clonar el repositorio
    ```{.bash code-line-numbers="false"}
    git clone https://github.com/repomacti/introduccion_python.git
    
    ```
  - Git y GitHub